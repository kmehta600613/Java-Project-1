/*
 
 This program should ask the user to enter 2 single-digit numbers and an operator, calculate the result of the operation, output the 
 description of the operation in plain English as well as the numeric result, and then provide the user with an option to restart. 
 The user should be notified if the number or operation is invalid. Also, any attempts of dividing by 0 should result in the program printing 
 "Division by 0 not allowed".
 
 */


import java.util.Scanner;
import java.math.*;
public class EnglishLanguageCalculator {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("Welcome to the English Calculator!");
		System.out.println("----------------------------------");
		System.out.println("Available operations: ");
		System.out.println("- * is Multiplication");
		System.out.println("- / is division");
		System.out.println("- + is addition");
		System.out.println("- - is subtraction");
		System.out.println("- ^ is exponentiation");
		System.out.println("----------------------------------");
		/*
		 All the operations that the program supports are made clear before the user inputs an operation with their corresponding symbols.
		 */
		int runA = 0;
		int runB = 0;
		int runC = 0;
		int runD = 0;
		int runE = 0;
		/*
		 All the runX variables are initialized and then used in the while statement below as parameters. Further details on how this works is given at the 
                 bottom of the program.
		 */
		while (runA == 0 || runB == 0 || runC == 0 || runD == 0 || runE == 0) {
			Scanner keyboard = new Scanner(System.in);
			System.out.print("Enter first number (single digit): ");
			int firstNumber = keyboard.nextInt();
			System.out.print("Enter operation: ");
			String operator = keyboard.next();
			System.out.print("Enter second number (single digit): ");
			int secondNumber = keyboard.nextInt();
			if (firstNumber > 10 || firstNumber < 0 || secondNumber > 10 || secondNumber < 0) {
				System.out.println("Invalid number"); 
				System.out.println("");
				System.out.print("Do you want to continue (Y/N): ");
				String yOrN = keyboard.next();
				if (yOrN.compareTo("Y") == 0 || yOrN.compareTo("y") == 0 || yOrN.compareTo("yes") == 0 || yOrN.compareTo("Yes") == 0 || yOrN.compareTo("YES") == 0) {
					continue;
				} else {
					break;
				}
			}
			/*
			 In the above if statement, the program verifies that both the numbers inputed by the user are single digits. If they are not, then the program
                         prints invalid number and gives the user the option to continue.
			 */
			switch (operator) {
			case "*":
				System.out.println(firstNumber + " times " + secondNumber + " is " + (firstNumber * secondNumber));
				break;
			case "/":
				if (secondNumber == 0) {
					System.out.print("Division by zero is not allowed"); //This allows to program to print that statement instead of a division error.
					break;
				} else {
					System.out.println(firstNumber + " divided by " + secondNumber + " is " + (firstNumber/(double)(secondNumber))); 
                                        /* The second number is converted into a double here before the program performs division so that there are no cases of integer
                                           division. For e.g. (3/2 will show 1.5, not 1)
                                        */
					break;
				}
			case "+":
				System.out.println(firstNumber + " plus " + secondNumber + " is " + (firstNumber + secondNumber));
				break;
			case "-":
				System.out.println(firstNumber + " minus " + secondNumber + " is " + (firstNumber - secondNumber));
				break;
			case "^":
				double exponentDouble = Math.pow(firstNumber, secondNumber); 
                                /* 
                                 Math.pow is used here to perform exponentiation. The output here will 
                                 automatically be a double.
                                */
				System.out.println(firstNumber + " to the power of " + secondNumber + " is " + (int)(exponentDouble)); 
                                /* 
                                 The output is changed from double to integer just to keep everything consistent.
                                */
				break;
			default:
				System.out.println("Invalid operation"); 
                                /* 
                                 If the user inputs an operator that does not match any case above, then the program by default will print "Invalid operation".
                                */
			}
			/*
			 A switch function is used above to perform the various operations according to the operator inputed by the user. The print statements also 
                         print the operations out in plain English.
			 */
			System.out.println("");
			System.out.print("Do you want to continue (Y/N): "); // After a case is performed, the user get's the option to continue.
			System.out.print("");
			String yesOrNo = keyboard.next();
			
			runA = yesOrNo.compareTo("Y");
			runB = yesOrNo.compareTo("y");
			runC = yesOrNo.compareTo("yes");
			runD = yesOrNo.compareTo("Yes");
			runE = yesOrNo.compareTo("YES");
			
			/*
			 The variable yesOrNo is compared to every possible way a user would want to express "yes" when asked if they would like to continue. The 
                         compareTo method stores a 0 or 1 based on whether the 2 strings are equal which is why in the while statement, the parameter compares if any 
                         of the runX variables have a value of 0. If it does, then the entire loop reiterates until the user types in anything other than a yes or any
                         form of yes, when asked if they want to continue.
			 */
			
		
	}
	}
}
