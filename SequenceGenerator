/*
 This program asks the user for a positive integer less than or equal to 100, and then performs a range check where the number must 
 be between 0 and 100. If the input passes the check, then the program uses it as the first element of the sequence, computes and 
 outputs the sequence as per the formulas, until the last element precedes the element 1. The sequence generates the sequence in
 lines of 20 elements, wrapping odd integers in parentheses and even integers in square brackets.
 
 C(i+1) = Ci/2            if n = 0( i mod 2)
          6 * Ci + 2      if n = 1 (i mod 2)
 
 */

import java.util.Scanner;
public class SequenceGenerator {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("Welcome to The Sequence Generator");
		System.out.println("---------------------------------");
		Scanner keyboard = new Scanner(System.in);
		System.out.print("Please enter a positive integer no more than 100: ");
		int number = keyboard.nextInt();	
		
		assert number > 0 && number < 101;
		
		int counter = 0; 
		if (number%2 == 0) {  
			System.out.print("[" + number + "]");
			counter++; 
		} else {
			System.out.print("(" + number + ")");
			counter++;
		}
		
		while (number > 2) { 
			if (number%2 == 0){
				int evenNumber = number/2;
				if (evenNumber%2 == 0) {
					System.out.print("[" + evenNumber + "]");
					counter++;
				}else {
					System.out.print("(" + evenNumber + ")");
					counter++;
				}
				number = evenNumber;   
			} else {
				System.out.print("[" + ((number * 6) + 2) + "]");
				int oddNumber = ((number * 6) + 2);
				number = oddNumber;  
				counter++;
			} if (counter%20 == 0) {
				System.out.printf("%n");
				
			}
		}
	}
}	


